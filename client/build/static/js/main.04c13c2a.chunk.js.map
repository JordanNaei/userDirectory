{"version":3,"sources":["components/SearchForm.js","components/EmployeeCard.js","utils/API.js","components/SearchResultContainer.js","App.js","index.js"],"names":["styles","card","marginLeft","SearchForm","props","className","htmlFor","onChange","handleInputChange","value","searchName","name","type","placeholder","autocomplete","onClick","handleFormSubmit","handleReload","style","EmployeeCard","alt","firstName","src","picture","lastName","email","phone","children","axios","get","SearchResultContainer","state","result","search","checked","originalLoad","event","target","setState","preventDefault","pStrg","toTitleCase","filterEmployees","searchkey","a","filterResult","filter","person","handleSorting","e","getStateResult","sort","b","fa","toLowerCase","fb","sortedResults","API","then","res","data","results","map","first","last","large","key","id","console","log","catch","error","str","replace","txt","charAt","toUpperCase","substr","this","scope","length","info","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04c13c2a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst styles = {\n  card: {\n    marginLeft: 20,\n  }\n};\n\nfunction SearchForm(props) {\n  return (\n    <form className=\"form col-12\">\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.searchName}\n          name=\"firstName\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search By First Name\"\n          autocomplete=\"off\"\n        />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\n          Search\n        </button>\n        <button onClick={props.handleReload} style={styles.card} className=\"btn btn-primary mt-3\">\n          Reload Employees\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nconst styles = {\n  card: {\n    marginLeft: 20,\n  },\n  center: {\n  margin: 50,\n  }\n};\n\nfunction EmployeeCard(props) {\n  return (\n      <tr>\n        <td><img alt={props.firstName} src={props.picture} /></td>\n        <td >{props.firstName}</td>\n        <td >{props.lastName}</td>\n        <td >{props.email}</td>\n        <td >{props.phone}</td>\n        {props.children}\n      </tr>\n  );\n}\n\nexport default EmployeeCard;","import axios from \"axios\";\n\n\nconst BASEURL = \"https://randomuser.me/api/?results=200&nat=us\";\n\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\n// eslint-disable-next-line\nexport default {\n  search: function() {\n       return axios.get(BASEURL);\n  }\n};\n\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport EmployeeCard from \"./EmployeeCard\";\nimport API from \"../utils/API\";\nimport \"../styles/Result.css\";\n\nclass SearchResultContainer extends Component {\n  state = {\n    result: [],\n    search: \"\",\n    searchName: \"\",\n    checked: \"\",\n    originalLoad: []\n  };\n\n  // On mount to get the employees info listed\n  componentDidMount() {\n    API.search()\n      .then(res => {\n        this.setState({\n          result: res.data.results.map((e) => ({\n            firstName: e.name.first,\n            lastName: e.name.last,\n            picture: e.picture.large,\n            email: e.email,\n            phone: e.phone,\n            key: e.id.value,\n          })),\n        })\n        this.setState({\n          originalLoad: [...this.state.result],\n        });\n\n        console.log(this.state.originalLoad);\n\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    const { value } = event.target;\n    // Updating the input's state\n    this.setState({\n      searchName: value\n    });\n  };\n\n  // When the form is submitted, search the Giphy API for `this.state.search`\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.searchName === \"\") {\n      this.setState({\n        result: [...this.state.originalLoad],\n        search: \"\",\n        searchName: \"\"\n\n      })\n    } else {\n      const pStrg = this.toTitleCase(this.state.searchName);\n      this.filterEmployees(pStrg);\n    }\n\n  };\n\n  handleReload = event => {\n    event.preventDefault();\n    this.setState({\n      result: [...this.state.originalLoad],\n      search: \"\",\n      searchName: \"\"\n    })\n\n\n  };\n\n  toTitleCase(str) {\n    return str.replace(\n      /\\w\\S*/g,\n      function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n    );\n  }\n\n  filterEmployees = async (searchkey) => {\n    var filterResult = this.state.result.filter(person => person.firstName === searchkey);\n    this.setState({\n      result: filterResult,\n      searchName: \"\"\n    })\n  }\n\n\n  handleSorting = async (e) => {\n    const getStateResult = this.state.result;\n    if (e.target.checked) {\n      const sortedResults = await getStateResult.sort((a, b) => {\n        let fa = a.firstName.toLowerCase();\n        let fb = b.firstName.toLowerCase();\n        if (fa < fb) {\n          return -1;\n        }\n        if (fa > fb) {\n          return 1;\n        }\n        return 0;\n      });\n      this.setState({\n        result: sortedResults,\n        checked: true\n      })\n\n    } else {\n\n      this.setState({\n        result: [...this.state.originalLoad],\n        checked: false\n      })\n\n\n    }\n\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h2>Employee Directory</h2>\n          </div>\n        </div>\n        <div className=\"row text-center\">\n          <div className=\"col-md-6 center-block\">\n            <SearchForm\n              searchName={this.state.searchName}\n              handleInputChange={this.handleInputChange}\n              handleFormSubmit={this.handleFormSubmit}\n              handleReload={this.handleReload}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <table className=\"table\">\n            <tr>\n              <th scope=\"col\"> Photo</th>\n              <th scope=\"col\"><input className=\"form-check-input\" name=\"firstName\" onChange={event => this.handleSorting(event)} type=\"checkbox\" id=\"flexCheckDefault1\" />FirstName</th>\n              <th scope=\"col\"><input className=\"form-check-input\" name=\"lastName\" onChange={event => this.handleSorting(event)} type=\"checkbox\" id=\"flexCheckDefault2\" />LastName </th>\n              <th scope=\"col\"><input className=\"form-check-input\" name=\"email\" onChange={event => this.handleSorting(event)} type=\"checkbox\" id=\"flexCheckDefault3\" />Email</th>\n              <th scope=\"col\"><input className=\"form-check-input\" name=\"phone\" onChange={event => this.handleSorting(event)} type=\"checkbox\" id=\"flexCheckDefault4\" />Phone</th>\n            </tr>\n            {this.state.result.length !== 0 || undefined ? (\n              this.state.result.map(info => (\n                <EmployeeCard\n                  picture={info.picture}\n                  firstName={info.firstName}\n                  lastName={info.lastName}\n                  email={info.email}\n                  phone={info.phone}\n                  key={info.key}\n                  handleSorting={this.handleSorting}\n                ></EmployeeCard>))) :\n\n              (<EmployeeCard\n                picture=\"\"\n                firstName=\"\"\n                lastName=\"\"\n                email=\"\"\n                phone=\"\"\n                key=\"\"><td><b>No result found, reload employee</b></td></EmployeeCard>)\n\n            }\n          </table>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default SearchResultContainer;","import React from \"react\";\nimport SearchResultContainer from \"./components/SearchResultContainer\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return <SearchResultContainer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}